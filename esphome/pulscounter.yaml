# Delen en bewerken mag maar laat deze eerste regels staan.
# Bron : https://www.huizebruin.nl
# Bron File : https://github.com/huizebruin/s0tool/tree/main/esphome
# © Huizebruin.nl
substitutions:
  device_description: ${name} gemaakt door huizebruin.nl versie ${vdate} .
  name: s0tool-standard
  vdate: "v22.9.18-b9"  

esphome:
  name: ${name}
  name_add_mac_suffix: true
  comment: '${device_description}'
  project:
    name: huizebruin.${name}
    version: "${vdate}"
    
esp8266:
  board: d1_mini
  restore_from_flash: True
  framework:
    version: recommended     
  
 dashboard_import:
  package_import_url: github://huizebruin/s0tool/esphome/pulscounter.yaml@beta
  
wifi:

#------------------------##------------------------##------------------------##------------------------#
# ⬇ Hieronder niets veranderen tenzij je het overal goed aanpast ⬇ #
# ⬇ Schakel fallback-hotspot (captive portal) in voor het geval de wifi-verbinding mislukt ⬇ #
  ap:
    ssid: "${name}"

web_server:
  port: 80
  
captive_portal:
# ⬇ Enable logging ⬇ # 
logger:
  level: INFO
  
#  # ⬇ Enable Home Assistant API ⬇ # 
api:
  services:
    - service: meterstand_water
      variables:
        meter_value: int #float
      then:
        - globals.set:
            id: totalWaterUsage
            value: !lambda "return ( meter_value ) ;"

    - service: meterstand_kwh
      variables:
        meter_value: int #float
      then:
        - globals.set:
            id: totalkwhUsage
            value: !lambda "return ( meter_value ) ;"

globals:
  - id: totalWaterUsage
    type: int #float
# ⬇ Bij het updaten onder de waarde, verander dit in no voor 1 run  ⬇ # 
    restore_value: no      
# ⬇ Bij het flashen,pas dit aan! ⬇ #        
    initial_value: '207' 
    
  - id: totalkwhUsage
    type: int #float
# ⬇ Bij het updaten onder de waarde, verander dit in nee voor 1 run  ⬇ # 
    restore_value: no
# ⬇ Bij het flashen,pas dit aan! ⬇ #        
    initial_value: '14968' 
    
  - id: Select_pulse_rate
    type: int
    restore_value: no  # aanpassen naar no indien de nieuwe waarde onder de oude ligt
    initial_value: '1000'   # pulse rate van de kWh meter -> xxx pulses / kWh   

ota:
  safe_mode: true
  reboot_timeout: 10min
  num_attempts: 5
  
#  ⬇ Enable time component voor reset elke nacht ⬇ #
time:
  - platform: homeassistant
    id: time_homeassistant
    on_time_sync:
      - component.update: S0tool_uptime_timestamp
# select:
#   # ⬇ imp/kWh rate ⬇ #
#   - platform: template
#     name: "pulse_rate kWh meter"
#     id: Select_pulse_rate
#     optimistic: true
#     options:
#       - "2000"
#       - "1500" 
#       - "1000"
#       - "500" 
#       - "100"
#     initial_option: "1000"
#     on_value:
#       then:
#         - logger.log:
#             format: "Chosen option: %s "
#             args: ["x.c_str()"]

#------------------------# Kwh meter S0 poort 1 #------------------------#
sensor:
# ⬇ kwh meter s0 ⬇ #
  - platform: pulse_meter
    pin: D5
    name:  "Actuele energie"
    id: W_opbrengst
    icon: "mdi:flash"
    internal_filter: ${impulslengte} 
    accuracy_decimals: 3
    unit_of_measurement: 'kW'
    state_class: measurement
    device_class: power
    filters:
      - lambda: return x * ((60.0 / atoi(id(Select_pulse_rate).state.c_str()))); 


# ⬇ Totaal opgebracht ⬇ #    
    total:
      unit_of_measurement: 'kWh'
      name: "Totaal opgebracht"
      id: W_opbrengst_totaal
      state_class: total_increasing
      device_class: energy
      icon: "mdi:flash"
      accuracy_decimals: 2
      filters:
        - multiply: 0.001

# ⬇ Kwh meterstand ⬇ stand bij benadering #        
  - platform: template
    id: kwh_total
    name: "Actuele meterstand"
    state_class: "total_increasing"
    icon: "mdi:flash"
    update_interval: 1s
    unit_of_measurement: 'kWh'
    accuracy_decimals: 2
    lambda: 
      return id(W_opbrengst_totaal).state + id(totalkwhUsage);

#------------------------# Watermeter #------------------------#
# ⬇ watermeter pulsen ⬇ #
  - platform: pulse_counter
    pin: D2
    id: watermeter_pulse
    name: "watermeter pulse"
    state_class: measurement
#    update_interval: 2s
    accuracy_decimals: 1

# ⬇ Totaal watermeter ⬇ #      
    total:
      id: sensor_pulse_meter_total
      name: "watermeter Totaal"
      icon: "mdi:cube-outline"
      state_class: "total_increasing"
      unit_of_measurement: m3
      accuracy_decimals: 3
      filters:
      - multiply: 0.001
      
# ⬇ Watermeter stand bij benadering ⬇ #
  - platform: template
    id: watermeter_total
    name: "watermeter stand"
    state_class: "total_increasing"
    icon: mdi:water
    unit_of_measurement: m3
    accuracy_decimals: 3
    lambda:       
      return id(sensor_pulse_meter_total).state + id(totalWaterUsage);

      
# ⬇ watermeter l/min ⬇ #
  - platform: template
    name: "Water verbruik Liter"
    id: watermeter_flow
    accuracy_decimals: 1
    unit_of_measurement: "l/min"
    icon: "mdi:water"
    lambda: return (id(watermeter_pulse).state);
    

sensor:
#------------------------#  sensoren #------------------------#
  - platform: uptime
    id: S0tool_uptime

  - platform: template
    id: S0tool_uptime_timestamp
    name: "${name} online sinds"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(S0tool_uptime).state
      );
      return timestamp;  

# ⬇ versie verbinding informatie sensoren voor in ha ⬇ #
  # WiFi signal
  - platform: wifi_signal
    name: "${name} - WiFi Signal"
    update_interval: 120s
    
text_sensor:
  - platform: template
    name: "${name}_versie"
    id: s0tool_versie
    icon: "mdi:label-outline"
    update_interval: 6h
    lambda: |-
      return {"${vdate}"};

  - platform: wifi_info
    ip_address:
      name: "${name} IP-adres"
      id: s0tool_ip_adres
      icon: mdi:ip-network
    ssid:
      name: "${name} Netwerk"
      id: s0tool_netwerk
      icon: mdi:access-point-network
    mac_address:
      name: "${name} Mac-adres"
      id: s0tool_mac_adres
      icon: mdi:folder-key-network-outline

#  restart button  #
button:  
  - platform: restart
    name: "${name} Restart device"
    
# switch:
# # safe mode switch
#   - platform: safe_mode
#     name: "${name} Safe Mode"   

# # Factory Reset Switch from ESPHome v2022.09    
#   - platform: factory_reset
#     name: Restart with Factory Default Settings    
    
# diagnostic button #
binary_sensor:
  - platform: status
    name: "${name} Status"
    entity_category: diagnostic
    
# packages:   
#   remote_package:
#     url: https://github.com/huizebruin/s0tool/
#     ref: beta
#     files: 
#       - esphome/components/basis.yaml
#      - esphome/components/2000imp.yml
#      - esphome/components/watermeter.yaml            
#     refresh: 0d     
